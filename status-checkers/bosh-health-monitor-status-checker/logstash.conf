input {
  exec {
    interval => 60
    command => "./query.sh"
  }

  exec {
    interval => 60
    command => "./query1.sh"
  }
}

filter {

    json {
      source => "message"
    }
#
#{
#      "@timestamp" => "2014-11-07T17:40:05.433Z",
#           "_type" => "event_source",
#             :name => "/var/vcap/sys/log/hm9000/hm9000_shredder.stdout.log",
#              :key => "bosh-meta-logsearch-io/apps.meta.logsearch.#io/hm9000_z1/0/hm9000//var/vcap/sys/log/hm9000/hm9000_shredder.stdout.log",
#             :host => "hm9000_z1/0",
#          :service => "hm9000",
#     :event_source => "/var/vcap/sys/log/hm9000/hm9000_shredder.stdout.log",
#      :environment => "bosh-meta-logsearch-io",
#          :cluster => "apps.meta.logsearch.io",
#           :status => "OK",
#    :status_weight => 1,
#     :status_check => "logsearchshipper-bosh-event-data-exists-status-checker",
#        "@version" => "1"
#}

    mutate {
      add_field => ["component","TODO:component-id"]
      add_field => ["status","OK"]
      add_field => ["status_weight",2]
      add_field => ["status_check","bosh-health-monitor-status-checker"]
    }

    if [hits][total] > 0 {
      mutate {
        replace => ["status","FAIL"]
        add_field => ["description","BOSH detected a missing instance"]
      }
    }

    prune {
      whitelist_names => [ "@timestamp", "component", "status", "description"]
    }

}

output {    

  stdout { codec => rubydebug }

  #if [status] != "OK" {
  #  #Tell PagerDuty
  #  pagerduty {
  #    description => "%{description}"
  #    details => {
  #      "timestamp" => "%{@timestamp}"
  #      "status" => "%{status}"
  #    }
  #    event_type => "trigger"
  #    incident_key => "%{component}"
  #    service_key => "ec068ac2c8c0492e851e2a349ee7147b"
  #  }
  #   
  #}
  
}
 
